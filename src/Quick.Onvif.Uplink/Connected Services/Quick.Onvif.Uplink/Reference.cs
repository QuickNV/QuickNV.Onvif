//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quick.Onvif.Uplink
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.onvif.org/ver10/uplink/wsdl", ConfigurationName="Quick.Onvif.Uplink.UplinkPort")]
    public interface UplinkPort
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/uplink/wsdl/GetServiceCapabilities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        System.Threading.Tasks.Task<Quick.Onvif.Uplink.Capabilities> GetServiceCapabilitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/uplink/wsdl/GetUplinks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Quick.Onvif.Uplink.GetUplinksResponse> GetUplinksAsync(Quick.Onvif.Uplink.GetUplinksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/uplink/wsdl/SetUplink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task SetUplinkAsync(Quick.Onvif.Uplink.Configuration Configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/uplink/wsdl/DeleteUplink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Quick.Onvif.Uplink.DeleteUplinkResponse> DeleteUplinkAsync(Quick.Onvif.Uplink.DeleteUplinkRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/uplink/wsdl")]
    public partial class Capabilities
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private int maxUplinksField;
        
        private bool maxUplinksFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxUplinks
        {
            get
            {
                return this.maxUplinksField;
            }
            set
            {
                this.maxUplinksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxUplinksSpecified
        {
            get
            {
                return this.maxUplinksFieldSpecified;
            }
            set
            {
                this.maxUplinksFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/uplink/wsdl")]
    public partial class Configuration
    {
        
        private string remoteAddressField;
        
        private string certificateIDField;
        
        private string userLevelField;
        
        private string statusField;
        
        private string certPathValidationPolicyIDField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string RemoteAddress
        {
            get
            {
                return this.remoteAddressField;
            }
            set
            {
                this.remoteAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CertificateID
        {
            get
            {
                return this.certificateIDField;
            }
            set
            {
                this.certificateIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserLevel
        {
            get
            {
                return this.userLevelField;
            }
            set
            {
                this.userLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CertPathValidationPolicyID
        {
            get
            {
                return this.certPathValidationPolicyIDField;
            }
            set
            {
                this.certPathValidationPolicyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=5)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUplinks", WrapperNamespace="http://www.onvif.org/ver10/uplink/wsdl", IsWrapped=true)]
    public partial class GetUplinksRequest
    {
        
        public GetUplinksRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUplinksResponse", WrapperNamespace="http://www.onvif.org/ver10/uplink/wsdl", IsWrapped=true)]
    public partial class GetUplinksResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/uplink/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Configuration")]
        public Quick.Onvif.Uplink.Configuration[] Configuration;
        
        public GetUplinksResponse()
        {
        }
        
        public GetUplinksResponse(Quick.Onvif.Uplink.Configuration[] Configuration)
        {
            this.Configuration = Configuration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUplink", WrapperNamespace="http://www.onvif.org/ver10/uplink/wsdl", IsWrapped=true)]
    public partial class DeleteUplinkRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/uplink/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string RemoteAddress;
        
        public DeleteUplinkRequest()
        {
        }
        
        public DeleteUplinkRequest(string RemoteAddress)
        {
            this.RemoteAddress = RemoteAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUplinkResponse", WrapperNamespace="http://www.onvif.org/ver10/uplink/wsdl", IsWrapped=true)]
    public partial class DeleteUplinkResponse
    {
        
        public DeleteUplinkResponse()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface UplinkPortChannel : Quick.Onvif.Uplink.UplinkPort, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class UplinkPortClient : System.ServiceModel.ClientBase<Quick.Onvif.Uplink.UplinkPort>, Quick.Onvif.Uplink.UplinkPort
    {
        
        public UplinkPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<Quick.Onvif.Uplink.Capabilities> GetServiceCapabilitiesAsync()
        {
            return base.Channel.GetServiceCapabilitiesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Quick.Onvif.Uplink.GetUplinksResponse> Quick.Onvif.Uplink.UplinkPort.GetUplinksAsync(Quick.Onvif.Uplink.GetUplinksRequest request)
        {
            return base.Channel.GetUplinksAsync(request);
        }
        
        public System.Threading.Tasks.Task<Quick.Onvif.Uplink.GetUplinksResponse> GetUplinksAsync()
        {
            Quick.Onvif.Uplink.GetUplinksRequest inValue = new Quick.Onvif.Uplink.GetUplinksRequest();
            return ((Quick.Onvif.Uplink.UplinkPort)(this)).GetUplinksAsync(inValue);
        }
        
        public System.Threading.Tasks.Task SetUplinkAsync(Quick.Onvif.Uplink.Configuration Configuration)
        {
            return base.Channel.SetUplinkAsync(Configuration);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Quick.Onvif.Uplink.DeleteUplinkResponse> Quick.Onvif.Uplink.UplinkPort.DeleteUplinkAsync(Quick.Onvif.Uplink.DeleteUplinkRequest request)
        {
            return base.Channel.DeleteUplinkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Quick.Onvif.Uplink.DeleteUplinkResponse> DeleteUplinkAsync(string RemoteAddress)
        {
            Quick.Onvif.Uplink.DeleteUplinkRequest inValue = new Quick.Onvif.Uplink.DeleteUplinkRequest();
            inValue.RemoteAddress = RemoteAddress;
            return ((Quick.Onvif.Uplink.UplinkPort)(this)).DeleteUplinkAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
    }
}
